# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11r7xSbqlHCHX___2jdjO5heTp8cih-ZQ
"""

from google.colab import files
uploaded = files.upload()

import csv

cleaned_data = []
with open("sales_data.csv", "r") as file:
    reader = csv.DictReader(file)
    for row in reader:
        if row["Customer"] == "N/A":
            continue
        if row["Price"] == "":
            continue
        if int(row["Quantity"]) <= 0:
            continue
        total_price = int(row["Quantity"]) * int(row["Price"])
        row["Total_Price"] = total_price
        cleaned_data.append(row)

with open("cleaned_sales_data.csv", "w", newline='') as file:
    fieldnames = ["Order_ID", "Customer", "Product", "Quantity", "Price", "Date", "Total_Price"]
    writer = csv.DictWriter(file, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(cleaned_data)

files.download("cleaned_sales_data.csv")

from google.colab import files
uploaded = files.upload()

import csv
import pandas as pd
import matplotlib.pyplot as plt

cleaned_data = []

with open("sales_data.csv", "r") as file:
    reader = csv.DictReader(file)
    for row in reader:
        if row["Customer"] == "N/A":
            continue
        if row["Price"] == "":
            continue
        if int(row["Quantity"]) <= 0:
            continue
        total_price = int(row["Quantity"]) * int(row["Price"])
        row["Total_Price"] = total_price
        cleaned_data.append(row)

# Save to new file
with open("cleaned_sales_data.csv", "w", newline='') as file:
    fieldnames = ["Order_ID", "Customer", "Product", "Quantity", "Price", "Date", "Total_Price"]
    writer = csv.DictWriter(file, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(cleaned_data)

# Load cleaned data into pandas for analysis
df = pd.read_csv("cleaned_sales_data.csv")

# Show KPIs
print("Total Revenue:", df["Total_Price"].sum())
print("Total Orders:", len(df))
print("\nRevenue by Product:\n", df.groupby("Product")["Total_Price"].sum())
print("\n Revenue by Customer:\n", df.groupby("Customer")["Total_Price"].sum())

# Bar chart - Revenue by Product
plt.figure(figsize=(8,5))
df.groupby("Product")["Total_Price"].sum().plot(kind='bar', color='skyblue')
plt.title("Revenue by Product")
plt.ylabel("Revenue")
plt.xlabel("Product")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("revenue_by_product.jpeg")
plt.show()

files.download("revenue_by_product.jpeg")

# Line chart - Orders over time
df["Date"] = pd.to_datetime(df["Date"])
orders_by_date = df.groupby("Date").size()
plt.figure(figsize=(8,5))
orders_by_date.plot(kind='line', marker='o', color='green')
plt.title("Orders Over Time")
plt.ylabel("Number of Orders")
plt.xlabel("Date")
plt.grid(True)
plt.tight_layout()
plt.savefig("orders_over_time.jpeg")
plt.show()

files.download("orders_over_time.jpeg")

# Allow file download
files.download("cleaned_sales_data.csv")

